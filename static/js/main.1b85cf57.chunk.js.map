{"version":3,"sources":["styles.js","components/Piece.js","components/Puzzle.js","utils.js","assets/main-square-urban-tourism-spain.jpg","App.js","index.js"],"names":["puzzleWrapperStyles","props","display","flexWrap","padding","width","height","puzzlePieceStyles","pieces","margin","border","backgroundImage","image","backgroundSize","backgroundPosition","x","y","opacity","isOver","backgroundRepeat","cursor","Piece","memo","position","onSwap","useDrag","item","type","dragEl","useDrop","accept","drop","collect","monitor","dropRef","className","ref","style","Puzzle","onComplete","useState","originalPositions","setOriginalPositions","positions","setPositions","coords","setCoords","items","sourcePosition","dropPosition","a","b","oldPositions","slice","newPositions","i","value","newValue","push","Array","isArray","length","every","val","index","getCoords","useCallback","Math","floor","useEffect","rootPositions","keys","map","pos","j","random","shuffle","DndProvider","backend","HTML5Backend","defaultProps","App","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAaA,EAAsB,SAACC,GAAD,MAAY,CAC3CC,QAAS,OACTC,SAAU,OACVC,QAAS,EACTC,MAAM,GAAD,OAAKJ,EAAMI,MAAX,MACLC,OAAO,GAAD,OAAKL,EAAMK,OAAX,QAGGC,EAAoB,SAACN,GAAD,MAAY,CACzCI,MAAM,GAAD,OAAKJ,EAAMI,MAAQJ,EAAMO,OAAzB,MACLF,OAAO,GAAD,OAAKL,EAAMK,OAASL,EAAMO,OAA1B,MACNC,OAAQ,cACRC,OAAQ,iBACRC,gBAAgB,OAAD,OAASV,EAAMW,MAAf,KACfC,eAAe,GAAD,OAAKZ,EAAMI,MAAX,cAAsBJ,EAAMK,OAA5B,MACdQ,mBAAmB,IAAD,OAAMb,EAAMc,EAAZ,eAAoBd,EAAMe,EAA1B,MAClBC,QAAQ,GAAD,OAAKhB,EAAMiB,OAAS,MAAQ,KACnCC,iBAAkB,YAClBC,OAAQ,S,gBC4BGC,EAzCDC,gBAAK,SAACrB,GAAW,IACrBsB,EAAqBtB,EAArBsB,SAAUC,EAAWvB,EAAXuB,OADU,EAGTC,YAAQ,CACzBC,KAAM,CAAEH,WAAUI,KAAM,WADjBC,EAHmB,sBAOEC,YAAQ,CACpCC,OAAQ,QACRC,KAAM,SAAC9B,GACLuB,EACEvB,EAAMsB,SACNA,IAGJS,QAAS,SAACC,GACR,MAAO,CACLf,OAAQe,EAAQf,aAjBM,mBAOnBA,EAPmB,KAOnBA,OAAUgB,EAPS,KAsB5B,OACE,qBAAKC,UAAU,eAAeC,IAAKF,EAAnC,SACE,qBACEE,IAAKR,EACLS,MAAO9B,EAAkB,2BAAKN,GAAN,IAAaiB,mBCvBvCoB,EAAS,SAACrC,GAAW,IACjBI,EAAsCJ,EAAtCI,MAAOC,EAA+BL,EAA/BK,OAAQE,EAAuBP,EAAvBO,OAAQ+B,EAAetC,EAAfsC,WADP,EAE0BC,mBAAS,IAFnC,mBAEjBC,EAFiB,KAEEC,EAFF,OAGUF,mBAAS,IAHnB,mBAGjBG,EAHiB,KAGNC,EAHM,OAIIJ,mBAAS,IAJb,mBAIjBK,EAJiB,KAITC,EAJS,KAKlBC,EAAQvC,EAASA,EAEjBgB,EAAS,SAACwB,EAAgBC,GAC9B,ICLoBC,EAAGC,EDKjBC,EAAeT,EAAUU,QACzBC,EAAe,GAErB,IAAK,IAAIC,KAAKH,EAAc,CAC1B,IAAMI,EAAQJ,EAAaG,GACvBE,EAAWD,EAEXA,IAAUR,EACZS,EAAWR,EACFO,IAAUP,IACnBQ,EAAWT,GAGbM,EAAaI,KAAKD,GAGpBb,EAAaU,GCrBOJ,EDuBRT,ECvBWU,EDuBQG,ECrB/BK,MAAMC,QAAQV,IACdS,MAAMC,QAAQT,IACdD,EAAEW,SAAWV,EAAEU,QACfX,EAAEY,OAAM,SAACC,EAAKC,GAAN,OAAgBD,IAAQZ,EAAEa,ODmBhCzB,KAIE0B,EAAYC,uBAChB,SAAC3C,GAAD,MAAe,CACbR,EAAGoD,KAAKC,MAAO7C,EAAWf,GAAWH,EAAQG,IAC7CQ,EAAGmD,KAAKC,MAAM7C,EAAWf,IAAWF,EAASE,MAE/C,CAACH,EAAOC,EAAQE,IAiBlB,OATA6D,qBAAU,WACR,IAAMC,EAAa,YAAOX,MAAMZ,GAAOwB,QACjC1B,EAASyB,EAAcE,KAAI,SAACC,GAAD,OAASR,EAAUQ,MAEpD3B,EAAUD,GACVH,EAAqB4B,GACrB1B,EC1DmB,SAACM,GAGtB,IAFA,IAAMC,EAAID,EAAEG,QAEHE,EAAIJ,EAAEU,OAAS,EAAGN,EAAI,EAAGA,IAAK,CACrC,IAAMmB,EAAIP,KAAKC,MAAMD,KAAKQ,UAAYpB,EAAI,IADL,EAEtB,CAACJ,EAAEuB,GAAIvB,EAAEI,IAAvBJ,EAAEI,GAFkC,KAE9BJ,EAAEuB,GAF4B,KAKvC,OAAOvB,EDkDQyB,CAAQN,MACpB,CAACL,EAAWlB,IAGb,eAAC8B,EAAA,EAAD,CAAaC,QAASC,IAAtB,UACE,qBAAK1C,MAAOrC,EAAoB,CAAEK,QAAOC,WAAzC,SAfFqC,EAAU6B,KAAI,SAACjB,GAAD,OACZ,cAAC,EAAD,yBAAehC,SAAUgC,EAAG/B,OAAQA,GAAYqB,EAAOU,IAAQtD,GAAnDsD,QAeZ,4HAqBNjB,EAAO0C,aAAe,CACpB3E,MAAO,IACPC,OAAQ,IACRE,OAAQ,EACR+B,WAAY,cAGCD,QE5FA,MAA0B,4DCmB1B2C,MAhBf,WAKE,OACE,cAAC,EAAD,CACErE,MAAOA,EACPP,MAAO,IACPC,OAAQ,IACRE,OAAQ,EACR+B,WAVe,WACjB2C,QAAQC,IAAI,4BCDhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b85cf57.chunk.js","sourcesContent":["export const puzzleWrapperStyles = (props) => ({\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: 0,\n    width: `${props.width}px`,\n    height: `${props.height}px`\n});\n\nexport const puzzlePieceStyles = (props) => ({\n    width: `${props.width / props.pieces}px`,\n    height: `${props.height / props.pieces}px`,\n    margin: '0 -1px -1px',\n    border: '1px solid #000',\n    backgroundImage: `url(${props.image})`,\n    backgroundSize: `${props.width}px ${props.height}px`,\n    backgroundPosition: `-${props.x}px -${props.y}px`,\n    opacity: `${props.isOver ? '0.2' : '1'}`,\n    backgroundRepeat: 'no-repeat',\n    cursor: 'move',\n})","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { puzzlePieceStyles } from '../styles';\n\nconst Piece = memo((props) => {\n  const { position, onSwap } = props;\n\n  const [, dragEl] = useDrag({\n    item: { position, type: 'PIECE' },\n  });\n\n  const [{ isOver }, dropRef] = useDrop({\n    accept: 'PIECE',\n    drop: (props) => {\n      onSwap(\n        props.position, // source position\n        position // drop position\n      );\n    },\n    collect: (monitor) => {\n      return {\n        isOver: monitor.isOver()\n      }\n    }\n  });\n\n  return (\n    <div className=\"puzzle-piece\" ref={dropRef}>\n      <div \n        ref={dragEl} \n        style={puzzlePieceStyles({ ...props, isOver })}>\n      </div>\n    </div>\n  );\n});\n\nPiece.propTypes = {\n  image: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  pieces: PropTypes.number.isRequired,\n  position: PropTypes.number.isRequired,\n  onSwap: PropTypes.func.isRequired\n};\n\nexport default Piece;\n","import { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport { puzzleWrapperStyles } from '../styles';\nimport { shuffle, isEqual } from '../utils';\nimport Piece from './Piece';\n\nconst Puzzle = (props) => {\n  const { width, height, pieces, onComplete } = props;\n  const [originalPositions, setOriginalPositions] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [coords, setCoords] = useState([]);\n  const items = pieces * pieces;\n\n  const onSwap = (sourcePosition, dropPosition) => {\n    const oldPositions = positions.slice();\n    const newPositions = [];\n\n    for (let i in oldPositions) {\n      const value = oldPositions[i];\n      let newValue = value;\n\n      if (value === sourcePosition) {\n        newValue = dropPosition;\n      } else if (value === dropPosition) {\n        newValue = sourcePosition;\n      }\n\n      newPositions.push(newValue);\n    }\n\n    setPositions(newPositions);\n\n    if (isEqual(originalPositions, newPositions)) {\n      onComplete();\n    }\n  };\n\n  const getCoords = useCallback(\n    (position) => ({\n      x: Math.floor((position % pieces) * (width / pieces)),\n      y: Math.floor(position / pieces) * (height / pieces),\n    }),\n    [width, height, pieces]\n  );\n\n  const renderPieces = () =>\n    positions.map((i) => (\n      <Piece key={i} position={i} onSwap={onSwap} {...coords[i]} {...props} />\n    ));\n\n  useEffect(() => {\n    const rootPositions = [...Array(items).keys()];\n    const coords = rootPositions.map((pos) => getCoords(pos));\n\n    setCoords(coords);\n    setOriginalPositions(rootPositions);\n    setPositions(shuffle(rootPositions));\n  }, [getCoords, items]);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div style={puzzleWrapperStyles({ width, height })}>{renderPieces()}</div>\n      <style>\n        {`\n          .puzzle-piece:hover {\n            opacity: 0.8;\n          }\n        `}\n      </style>\n    </DndProvider>\n  );\n};\n\nPuzzle.propTypes = {\n  image: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  pieces: PropTypes.number,\n  piecesCompleted: (props) =>\n    props['pieces'] < 3 && new Error('Invalid prop type `pieces`. It should be >= 1'),\n  onComplete: PropTypes.func,\n};\n\nPuzzle.defaultProps = {\n  width: 400,\n  height: 300,\n  pieces: 3,\n  onComplete: () => {},\n};\n\nexport default Puzzle;\n","export const shuffle = (a) => {\n  const b = a.slice();\n\n  for (let i = b.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [b[i], b[j]] = [b[j], b[i]];\n  }\n\n  return b;\n};\n\nexport const isEqual = (a, b) => {\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  );\n};\n","export default __webpack_public_path__ + \"static/media/main-square-urban-tourism-spain.1ab7d0f9.jpg\";","import Puzzle from './components/Puzzle';\nimport image from './assets/main-square-urban-tourism-spain.jpg'\n\nfunction App() {\n  const onComplete = () => {\n    console.log('Puzzle is completed!');\n  }\n\n  return (\n    <Puzzle\n      image={image}\n      width={575}\n      height={800}\n      pieces={3}\n      onComplete={onComplete}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}